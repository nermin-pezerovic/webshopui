name: Post-merge
on: 
  pull_request: 
    types: 
      - closed
env:
  AWS_REPOSITORY_URL: ${{ secrets.AWS_REPOSITORY_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs: 
  build-test:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps: 
    - name: PR merged
      run: echo "PR is merged"

    - name: Checkout repo
      uses: actions/checkout@v3
    - run: |
        echo "Building an image"
        docker build -t webshop/webshop_ui . 
      
    - name: Boot up containers
      run: docker compose up --detach

    - name:  Run unit tests
      run: |
          echo "Running tests"
          docker run --name webshop_ui_cont webshop/webshop_ui npm run test:unit
  tag-push:
    needs: build-test   
    if: needs.build-test.result == 'success'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      
    - name: Login to Amazon ECR
      env:
        AWS_REGION: us-east-1
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: webshop_ui
        IMAGE_TAG: latest
      run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    - name: Deploy to kubernetes
      